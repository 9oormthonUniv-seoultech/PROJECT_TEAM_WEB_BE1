name : build and deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      
      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v1

      - name: Docker Hub 로그인
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ssh connect & production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            touch ./docker-compose.yml
            
            #최신 Docker 이미지 가져오기
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            
            # docker-compose.yml 업데이트
            echo "${{ secrets.DOCKER_COMPOSE }}" > ./docker-compose.yml 
            
            # 필요없는 컨테이너, 볼륨, 네트워크 종료
            sudo docker stop $(sudo docker ps -a -q) 
            sudo docker rm -f $(sudo docker ps -qa)

            # 컨테이너 재생성, 백그라운드에서 실행
            sudo docker-compose up -d

            # 사용하지 않는 Docker 이미지 제거
            sudo docker image prune -f